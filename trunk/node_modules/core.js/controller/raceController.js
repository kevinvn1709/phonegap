var raceController = {
    join: function(data, socket, io) {
        var config = require("../../../config").values;
        socket.join(data.room_id);
        response = config.response;

        clienInRoom = io.sockets.clients(data.room_id);
        var playerListInfo = [];
        for (index in clienInRoom) {
            dataRacing = clienInRoom[index].store;
            if (typeof dataRacing.data.dataPlayer === 'undefined') {
                this.initRacing(dataRacing);
            }

            if (dataRacing.id === socket.id) {
                dataRacing.data.carColor = parseInt(Math.random() * 10);
            }

            playerListInfo.push({
                id: dataRacing.id,
                data: dataRacing.data,
            });
        }
        socket.get('username', function(err, name) {
            response.code = 100000;
            response.data = {
                username: name,
                playerList: playerListInfo,
            };
        });
        io.sockets.in(data.room_id).emit('join', response);
    },
    playing: function(data, socket, io) {
        console.log(data);
        clienInRoom = io.sockets.clients(data.room_id);
        var playerListInfo = [];
        for (index in clienInRoom) {
            dataRacing = clienInRoom[index].store;
            dataPlayer = dataRacing.data.dataPlayer;
            if (dataRacing.id === socket.id) {
                var keyCode = data.keyCode;
                var plain_word = dataPlayer.string_tmp[dataPlayer.i_count];
                var input_word = String.fromCharCode(keyCode);
                if (plain_word[dataPlayer.j_count] === input_word) {
                    dataPlayer.right_word += input_word;
                    dataPlayer.j_count++;
                }

                if (keyCode === 32) {
                    var text_input = data.text_input;
                    if (plain_word.length === dataPlayer.j_count && plain_word === text_input) {
                        dataPlayer.j_count = 0;
                        dataPlayer.right_word = "";


                        dataPlayer.text_input_length += (plain_word.length + 1); // count space bar
                        dataPlayer.i_count++;

                        var time = new Date();
                        var current_time = (time.getTime() / 1000);
                        dataPlayer.speed = parseInt((dataPlayer.i_count / (current_time - dataPlayer.start_time)) * 60);
                        dataPlayer.plain_word = plain_word;

                        if (dataPlayer.string_length === (dataPlayer.text_input_length - 1)) {
                            $('#typer').attr('disabled', true);
                            $('#typer').val('Hoàn tất!');
                            $('#typer').css({background: 'rgb(153, 204, 0)', color: 'white'});
                        } else {
                            dataPlayer.result = 1;
                        }
                    } else {
                        dataPlayer.result = 0;
                    }
                    playerListInfo.push({
                        id: dataRacing.id,
                        data: dataRacing.data,
                    });
                    response = {
                        code: 100000,
                        data: {
                            playerList: playerListInfo,
                        }
                    };
                    io.sockets.in(data.room_id).emit('playing', response);
                }

                if (keyCode === 46) {
                    var text_input_end = data.text_input;
                    if (dataPlayer.string_length === (dataPlayer.text_input_length + text_input_end.length + 1)) {
                        dataPlayer.result = 2;
                    }
                    playerListInfo.push({
                        id: dataRacing.id,
                        data: dataRacing.data,
                    });
                    response = {
                        code: 100000,
                        data: {
                            playerList: playerListInfo,
                        }
                    };
                    io.sockets.in(data.room_id).emit('playing', response);
                }
            }
        }

    },
    initRacing: function(dataRacing) {
        var date = new Date();
        var string_plain = "Có một con đường mang tên là tình yêu, khi tôi bước một mình đếm những nỗi cô đơn đếm trong từng làn gió thoảng đếm trong từng hạt mưa bay đến đây từng tia nắng sớm mai đến khi ngàn ánh sao rơi trong bóng đêm.";
        var string_length = string_plain.length;
        var text_input_length = 0;
        var start_time = (date.getTime() / 1000);
        var string_tmp = string_plain.split(" ");
        var step = 65 / string_tmp.length;

        dataRacing.data.dataPlayer = {
            string_plain: string_plain,
            string_length: string_length,
            text_input_length: text_input_length,
            start_time: start_time,
            string_tmp: string_tmp,
            step: step,
            right_word: '',
            speed: 0,
            i_count: 0,
            j_count: 0,
            result: -1,
            plain_word: '',
        };
    }
};
module.exports = raceController;